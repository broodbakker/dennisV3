{
  "version": 3,
  "sources": ["../../functions/importPosts.ts"],
  "sourceRoot": "/Users/janneke/developer/code/web_projects/website_dennis3/.netlify/functions-serve",
  "sourcesContent": ["import { PathAndDate } from \"../typescript\"\n\nexport const importPosts = async () => {\n  // https://medium.com/@shawnstern/importing-multiple-markdown-files-into-a-react-component-with-webpack-7548559fce6f\n  // second flag in require.context function is if subdirectories should be searched\n  const markdownFiles = require.context('../content/posts', false, /\\.md$/).keys()\n    .map(relativePath => relativePath.substring(2));\n\n  return Promise.all(\n    markdownFiles.map(async path => {\n      const markdown = await import(`../content/posts/${path}`);\n      return { ...markdown, slug: path.substring(0, path.length - 3) };\n    })\n  );\n};\n\nexport const importPostSlugs = async () => {\n  // https://medium.com/@shawnstern/importing-multiple-markdown-files-into-a-react-component-with-webpack-7548559fce6f\n  // second flag in require.context function is if subdirectories should be searched\n  const markdownFiles = require.context('../content/posts', false, /\\.md$/).keys()\n    .map(relativePath => relativePath.substring(2, relativePath.length - 3));\n  return Promise.all(\n    markdownFiles\n  );\n};\n\n\nexport const importPost = async (path: string) => {\n  const markdown = await import(`../content/posts/${path}`);\n\n  return markdown\n};\n\n\nexport const importPost1 = async () => {\n  const PostPathAndDate: PathAndDate[] = await getPostPathAndDate()\n\n  const sorted: PathAndDate[] = sortingPost(PostPathAndDate)\n\n  return Promise.all(\n    sorted.map(async (path: PathAndDate) => {\n      const markdown = await import(`../content/posts/${path.path}`);\n\n      return { ...markdown, slug: path.path.substring(0, path.path.length - 3) };\n    })\n  );\n}\n\nconst sortingPost = (PostPathAndDate: any) => {\n  return PostPathAndDate.sort((a: any, b: any) => (a.date < b.date ? 1 : -1))\n}\n\nconst getPostPathAndDate = () => {\n  const markdownFiles = require.context('../content/posts', false, /\\.md$/).keys()\n    .map(relativePath => relativePath.substring(2));\n\n  return Promise.all(\n    markdownFiles.map(async path => {\n      const markdown = await import(`../content/posts/${path}`);\n      const date = await markdown.attributes.date\n      return { date, path };\n    })\n  );\n}\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,IAAM,cAAc,YAAY;AAGrC,QAAM,gBAAgB,QAAQ,QAAQ,oBAAoB,OAAO,SAAS,OACvE,IAAI,kBAAgB,aAAa,UAAU;AAE9C,SAAO,QAAQ,IACb,cAAc,IAAI,OAAM,SAAQ;AAC9B,UAAM,WAAW,MAAM,6BAAO,WAAP,QAAO,oBAAoB;AAClD,WAAO,4BAAK,WAAL,CAAe,MAAM,KAAK,UAAU,GAAG,KAAK,SAAS;AAAA;AAAA;AAK3D,IAAM,kBAAkB,YAAY;AAGzC,QAAM,gBAAgB,QAAQ,QAAQ,oBAAoB,OAAO,SAAS,OACvE,IAAI,kBAAgB,aAAa,UAAU,GAAG,aAAa,SAAS;AACvE,SAAO,QAAQ,IACb;AAAA;AAKG,IAAM,aAAa,OAAO,SAAiB;AAChD,QAAM,WAAW,MAAM,6BAAO,WAAP,QAAO,oBAAoB;AAElD,SAAO;AAAA;AAIF,IAAM,cAAc,YAAY;AACrC,QAAM,kBAAiC,MAAM;AAE7C,QAAM,SAAwB,YAAY;AAE1C,SAAO,QAAQ,IACb,OAAO,IAAI,OAAO,SAAsB;AACtC,UAAM,WAAW,MAAM,6BAAO,WAAP,QAAO,oBAAoB,KAAK;AAEvD,WAAO,4BAAK,WAAL,CAAe,MAAM,KAAK,KAAK,UAAU,GAAG,KAAK,KAAK,SAAS;AAAA;AAAA;AAK5E,IAAM,cAAc,CAAC,oBAAyB;AAC5C,SAAO,gBAAgB,KAAK,CAAC,GAAQ,MAAY,EAAE,OAAO,EAAE,OAAO,IAAI;AAAA;AAGzE,IAAM,qBAAqB,MAAM;AAC/B,QAAM,gBAAgB,QAAQ,QAAQ,oBAAoB,OAAO,SAAS,OACvE,IAAI,kBAAgB,aAAa,UAAU;AAE9C,SAAO,QAAQ,IACb,cAAc,IAAI,OAAM,SAAQ;AAC9B,UAAM,WAAW,MAAM,6BAAO,WAAP,QAAO,oBAAoB;AAClD,UAAM,OAAO,MAAM,SAAS,WAAW;AACvC,WAAO,CAAE,MAAM;AAAA;AAAA;",
  "names": []
}
